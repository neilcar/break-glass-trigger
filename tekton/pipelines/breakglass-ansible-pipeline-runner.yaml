---
# Task to cleanup shared workspace
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cleanup-workspace
spec:
  workspaces:
    # Shared workspace where git repo is cloned
    - name: source
  steps:
    - name: cleanup-workspace
      image: centos
      script: |
        rm -rf $(workspaces.source.path)/*
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: write-alert-file
spec:
  params:
    - description: Alert body
      name: alert-body
      type: string    
  steps:
    - env:
        - name: JIRA_ADDR
          valueFrom:
            secretKeyRef:
              key: uri
              name: jira-api-token
        - name: JIRA_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: jira-api-token
        - name: JIRA_PASS
          valueFrom:
            secretKeyRef:
              key: token
              name: jira-api-token         
      image: centos
      name: write-alert
      resources: {}
      script: |
        #!/usr/bin/env bash
        mkdir /runner-dir/playbooks/env
        cat <<EOF > /runner-dir/playbooks/env/extravars
        {
          "alert_body": '$(params.alert-body)',
          "jira_uri": "${JIRA_ADDR}",
          "jira_user": "${JIRA_USER}",
          "jira_pass": "${JIRA_PASS}"
        }
        EOF
  workspaces:
    - description: |
        The folder containing deployment files
      mountPath: /runner-dir
      name: runner-dir
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: breakglass-ansible-pipeline-runner
spec:
  description: Run playbook to check breakglass annotation
  params:
    - description: Alert Body
      name: alert-body
      type: string
  tasks:
    - name: clone-playbooks
      taskRef:
        kind: ClusterTask
        name: git-clone
      params:
        - name: url
          value: "https://github.com/neilcar/break-glass-trigger.git"
        - name: revision
          value: main
      workspaces:
        - name: output
          workspace: files
    - name: write-alert
      params:
        - name: alert-body
          value: $(params.alert-body)
      runAfter:
        - clone-playbooks
      taskRef:
        kind: Task
        name: write-alert-file
      workspaces:
        - name: runner-dir
          workspace: files
    - name: breakglass-ansible-runner
      params:
        - name: project-dir
          value: playbooks
        - name: args
          value: 
            - '-p'
            - 'break-glass-trigger.yaml' 
      runAfter:
        - write-alert
      taskRef:
        kind: Task
        name: ansible-runner
      workspaces:
        - name: runner-dir
          workspace: files
  finally:
    # Cleanup workspace
    - name: cleanup
      taskRef:
        name: cleanup-workspace
      workspaces:
        - name: source
          workspace: files      
  workspaces:
    - name: files
