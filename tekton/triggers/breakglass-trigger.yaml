---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: breakglass-listener-interceptor
spec:
  triggers:
    - name: breakglass-listener
      interceptors:
        - cel:
            filter: "body.alert.name in ['Emergency Deployment Annotation']"
      bindings:
        - ref: breakglass-image-create-binding
      template:
        ref: breakglass-image-check
  resources:
    kubernetesResource:
      spec:
        template:
          spec:
            serviceAccountName: tekton-triggers-example-sa
            containers:
              - resources:
                  requests:
                    memory: "64Mi"
                    cpu: "250m"
                  limits:
                    memory: "128Mi"
                    cpu: "500m"
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: breakglass-image-create-binding
spec:
  params:
    - name: alert
      value: $(body.alert)
    - name: break-glass-annotation
      value: $(body.alert.deployment.annotations.admission\.stackrox\.io/break-glass)

---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: breakglass-ticket-check
spec:
  params:
    - name: alert
    - name: break-glass-annotation
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: TaskRun
      metadata:
        generateName: breakglass-ticket-check-
      spec:
        taskRef:
          name: ansible-runner
          kind: Task
        params:
        - name: image
          value: "ghcr.io/$(tt.params.namespace)/$(tt.params.name):$(tt.params.tag)"
        - name: rox_api_token
          value: roxsecrets
        - name: rox_central_endpoint
          value: roxsecrets

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-resource
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: el-breakglass-listener-interceptor
              servicePort: 8080